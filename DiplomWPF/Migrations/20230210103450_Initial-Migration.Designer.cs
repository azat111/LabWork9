// <auto-generated />
using System;
using DiplomWPF.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DiplomWPF.Migrations
{
    [DbContext(typeof(RZDDatabaseContext))]
    [Migration("20230210103450_Initial-Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DiplomWPF.Models.Cost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<int?>("Amount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("cost");
                });

            modelBuilder.Entity("DiplomWPF.Models.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("WorkerId")
                        .HasColumnName("Id_Worker")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("WorkerId");

                    b.ToTable("history");
                });

            modelBuilder.Entity("DiplomWPF.Models.JobName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("jobName");
                });

            modelBuilder.Entity("DiplomWPF.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<decimal>("Costs")
                        .HasColumnType("money");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.HasKey("Id");

                    b.ToTable("report");
                });

            modelBuilder.Entity("DiplomWPF.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("StatusId")
                        .HasColumnName("Id_Status")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnName("Id_Type")
                        .HasColumnType("integer");

                    b.Property<int>("WorkerId")
                        .HasColumnName("Id_Worker")
                        .HasColumnType("integer");

                    b.Property<string>("Post")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.HasIndex("WorkerId");

                    b.ToTable("request");
                });

            modelBuilder.Entity("DiplomWPF.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<string>("Title")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("status");
                });

            modelBuilder.Entity("DiplomWPF.Models.SystemAdministrator", b =>
                {
                    b.Property<int>("JobNameId")
                        .HasColumnName("Id_JobName")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<string>("Login")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Surname")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("JobNameId")
                        .HasName("SystemAdministrator_pkey");

                    b.ToTable("systemAdministrator");
                });

            modelBuilder.Entity("DiplomWPF.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<string>("Title")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("type");
                });

            modelBuilder.Entity("DiplomWPF.Models.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    b.Property<string>("Cabinet")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Patronymic")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("worker");
                });

            modelBuilder.Entity("DiplomWPF.Models.History", b =>
                {
                    b.HasOne("DiplomWPF.Models.Worker", "WorkerNavigationId")
                        .WithMany("History")
                        .HasForeignKey("WorkerId")
                        .HasConstraintName("fk_history_worker")
                        .IsRequired();
                });

            modelBuilder.Entity("DiplomWPF.Models.Request", b =>
                {
                    b.HasOne("DiplomWPF.Models.Status", "StatusNavigationId")
                        .WithMany("Request")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("fk_request_status")
                        .IsRequired();

                    b.HasOne("DiplomWPF.Models.Type", "TypeNavigationId")
                        .WithMany("Request")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("fk_request_type")
                        .IsRequired();

                    b.HasOne("DiplomWPF.Models.Worker", "WorkerNavigationId")
                        .WithMany("Request")
                        .HasForeignKey("WorkerId")
                        .HasConstraintName("fk_request_worker")
                        .IsRequired();
                });

            modelBuilder.Entity("DiplomWPF.Models.SystemAdministrator", b =>
                {
                    b.HasOne("DiplomWPF.Models.JobName", "JobNameNavigationId")
                        .WithOne("SystemAdministrator")
                        .HasForeignKey("DiplomWPF.Models.SystemAdministrator", "JobNameId")
                        .HasConstraintName("fk_systemAdministrator_jobName")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
